---
interface CarouselSlide {
  image: string;
  title: string;
  category: string;
  date: string;
  link: string;
}

const slides: CarouselSlide[] = [
  {
    image: 'https://images.unsplash.com/photo-1519389950473-47ba0277781c?w=1200&h=600&fit=crop',
    title: 'Unleash Your Creative Potential',
    category: 'Creative',
    date: 'Mar 31, 2025',
    link: '#'
  },
  {
    image: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1200&h=600&fit=crop',
    title: 'Uncovering Hidden & Special Places',
    category: 'Travel',
    date: 'Mar 30, 2025',
    link: '#'
  },
  {
    image: 'https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=1200&h=600&fit=crop',
    title: 'Exploring the Creative Boundaries',
    category: 'Creative',
    date: 'Mar 29, 2025',
    link: '#'
  },
  {
    image: 'https://images.unsplash.com/photo-1486312338219-ce68e2c6b7a4?w=1200&h=600&fit=crop',
    title: 'Unlocking Creativity of Design',
    category: 'Design',
    date: 'Mar 28, 2025',
    link: '#'
  },
  {
    image: 'https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=1200&h=600&fit=crop',
    title: 'Maximizing Work Productivity',
    category: 'Business',
    date: 'Mar 27, 2025',
    link: '#'
  },
  {
    image: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=1200&h=600&fit=crop',
    title: 'The Ultimate Adventure Guide',
    category: 'Lifestyle',
    date: 'Mar 26, 2025',
    link: '#'
  }
];
---

<div class="carousel-container">
  <div class="carousel-wrapper">
    <div class="carousel-slides" id="carousel-slides">
      {slides.map((slide, index) => (
        <div class="carousel-slide" data-slide={index}>
          <div class="slide-image">
            <img src={slide.image} alt={slide.title} loading={index === 0 ? 'eager' : 'lazy'} />
            <div class="slide-overlay"></div>
          </div>
          <div class="slide-content">
            <div class="slide-meta">
              <span class="slide-category">{slide.category}</span>
              <span class="slide-date">| {slide.date}</span>
            </div>
            <h3 class="slide-title">
              <a href={slide.link} class="slide-link">{slide.title.toUpperCase()}</a>
            </h3>
            <h4 class="slide-subtitle">
              <a href={slide.link}>{slide.title}</a>
            </h4>
          </div>
        </div>
      ))}
    </div>
    
    <!-- 导航按钮 -->
    <button class="carousel-btn carousel-prev" id="prev-btn" aria-label="Previous slide">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
    <button class="carousel-btn carousel-next" id="next-btn" aria-label="Next slide">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
    
    <!-- 指示器 -->
    <div class="carousel-indicators">
      {slides.map((_, index) => (
        <button 
          class={`indicator ${index === 0 ? 'active' : ''}`} 
          data-slide={index}
          aria-label={`Go to slide ${index + 1}`}
        >
          <span class="indicator-number">{String(index + 1).padStart(2, '0')}</span>
          <span class="indicator-total">/{String(slides.length).padStart(2, '0')}</span>
        </button>
      ))}
    </div>
  </div>
</div>

<script>
class ImageCarousel {
  constructor() {
    this.currentSlide = 0;
    this.slides = document.querySelectorAll('.carousel-slide');
    this.indicators = document.querySelectorAll('.indicator');
    this.prevBtn = document.getElementById('prev-btn');
    this.nextBtn = document.getElementById('next-btn');
    this.slidesContainer = document.getElementById('carousel-slides');
    this.totalSlides = this.slides.length;
    this.autoPlayInterval = null;
    
    this.init();
  }
  
  init() {
    // 事件监听
    this.prevBtn?.addEventListener('click', () => this.prevSlide());
    this.nextBtn?.addEventListener('click', () => this.nextSlide());
    
    this.indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => this.goToSlide(index));
    });
    
    // 键盘导航
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') this.prevSlide();
      if (e.key === 'ArrowRight') this.nextSlide();
    });
    
    // 触摸支持
    this.addTouchSupport();
    
    // 自动播放
    this.startAutoPlay();
    
    // 悬停暂停
    const container = document.querySelector('.carousel-container');
    container?.addEventListener('mouseenter', () => this.stopAutoPlay());
    container?.addEventListener('mouseleave', () => this.startAutoPlay());
  }
  
  updateSlides() {
    if (!this.slidesContainer) return;
    
    // 更新滑动位置
    this.slidesContainer.style.transform = `translateX(-${this.currentSlide * 100}%)`;
    
    // 更新指示器
    this.indicators.forEach((indicator, index) => {
      indicator.classList.toggle('active', index === this.currentSlide);
    });
  }
  
  nextSlide() {
    this.currentSlide = (this.currentSlide + 1) % this.totalSlides;
    this.updateSlides();
  }
  
  prevSlide() {
    this.currentSlide = (this.currentSlide - 1 + this.totalSlides) % this.totalSlides;
    this.updateSlides();
  }
  
  goToSlide(index) {
    this.currentSlide = index;
    this.updateSlides();
  }
  
  startAutoPlay() {
    this.stopAutoPlay();
    this.autoPlayInterval = setInterval(() => {
      this.nextSlide();
    }, 5000);
  }
  
  stopAutoPlay() {
    if (this.autoPlayInterval) {
      clearInterval(this.autoPlayInterval);
      this.autoPlayInterval = null;
    }
  }
  
  addTouchSupport() {
    let startX = 0;
    let isDragging = false;
    
    this.slidesContainer?.addEventListener('touchstart', (e) => {
      startX = e.touches[0].clientX;
      isDragging = true;
    });
    
    this.slidesContainer?.addEventListener('touchmove', (e) => {
      if (!isDragging) return;
      e.preventDefault();
    });
    
    this.slidesContainer?.addEventListener('touchend', (e) => {
      if (!isDragging) return;
      
      const endX = e.changedTouches[0].clientX;
      const diff = startX - endX;
      
      if (Math.abs(diff) > 50) {
        if (diff > 0) {
          this.nextSlide();
        } else {
          this.prevSlide();
        }
      }
      
      isDragging = false;
    });
  }
}

// 初始化轮播
document.addEventListener('DOMContentLoaded', () => {
  new ImageCarousel();
});
</script>

<style>
.carousel-container {
  position: relative;
  width: 100%;
  height: 60vh;
  min-height: 500px;
  max-height: 700px;
  margin-bottom: 4rem;
  overflow: hidden;
  border-radius: 16px;
  background: #111;
}

.carousel-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
}

.carousel-slides {
  display: flex;
  width: 100%;
  height: 100%;
  transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.carousel-slide {
  flex: 0 0 100%;
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: flex-end;
}

.slide-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.slide-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.6s ease;
}

.carousel-slide:hover .slide-image img {
  transform: scale(1.05);
}

.slide-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    180deg,
    rgba(0, 0, 0, 0.2) 0%,
    rgba(0, 0, 0, 0.4) 50%,
    rgba(0, 0, 0, 0.8) 100%
  );
}

.slide-content {
  position: relative;
  z-index: 10;
  padding: 3rem;
  max-width: 600px;
  color: white;
}

.slide-meta {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
  font-size: 0.9rem;
  opacity: 0.9;
}

.slide-category {
  color: #fff;
  font-weight: 500;
}

.slide-date {
  color: rgba(255, 255, 255, 0.7);
}

.slide-title {
  margin: 0 0 0.5rem 0;
  font-size: 1rem;
  font-weight: 600;
  letter-spacing: 0.05em;
  opacity: 0.8;
}

.slide-title .slide-link {
  color: rgba(255, 255, 255, 0.8);
  text-decoration: none;
  transition: color 0.2s;
}

.slide-title .slide-link:hover {
  color: #fff;
}

.slide-subtitle {
  margin: 0;
  font-size: 2.5rem;
  font-weight: 600;
  line-height: 1.2;
}

.slide-subtitle a {
  color: #fff;
  text-decoration: none;
  transition: color 0.2s;
}

.slide-subtitle a:hover {
  color: rgba(255, 255, 255, 0.9);
}

/* 导航按钮 */
.carousel-btn {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 50px;
  height: 50px;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  color: white;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s;
  backdrop-filter: blur(10px);
  z-index: 20;
}

.carousel-btn:hover {
  background: rgba(255, 255, 255, 0.2);
  border-color: rgba(255, 255, 255, 0.4);
  transform: translateY(-50%) scale(1.1);
}

.carousel-prev {
  left: 2rem;
}

.carousel-next {
  right: 2rem;
}

/* 指示器 */
.carousel-indicators {
  position: absolute;
  bottom: 2rem;
  right: 3rem;
  display: flex;
  gap: 0.5rem;
  z-index: 20;
}

.indicator {
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 25px;
  padding: 0.5rem 1rem;
  color: rgba(255, 255, 255, 0.7);
  cursor: pointer;
  font-size: 0.85rem;
  font-weight: 500;
  transition: all 0.3s;
  backdrop-filter: blur(10px);
}

.indicator:hover,
.indicator.active {
  background: rgba(255, 255, 255, 0.2);
  border-color: rgba(255, 255, 255, 0.4);
  color: #fff;
}

.indicator-total {
  opacity: 0.6;
}

/* 响应式设计 */
@media (max-width: 768px) {
  .carousel-container {
    height: 50vh;
    min-height: 400px;
    margin-bottom: 2rem;
    border-radius: 12px;
  }
  
  .slide-content {
    padding: 2rem 1.5rem;
  }
  
  .slide-subtitle {
    font-size: 1.8rem;
  }
  
  .carousel-btn {
    width: 40px;
    height: 40px;
  }
  
  .carousel-prev {
    left: 1rem;
  }
  
  .carousel-next {
    right: 1rem;
  }
  
  .carousel-indicators {
    bottom: 1rem;
    right: 1.5rem;
  }
  
  .indicator {
    padding: 0.4rem 0.8rem;
    font-size: 0.8rem;
  }
}

@media (max-width: 480px) {
  .carousel-container {
    height: 40vh;
    min-height: 350px;
  }
  
  .slide-content {
    padding: 1.5rem 1rem;
  }
  
  .slide-subtitle {
    font-size: 1.5rem;
  }
  
  .carousel-indicators {
    flex-wrap: wrap;
    gap: 0.3rem;
  }
  
  .indicator {
    padding: 0.3rem 0.6rem;
    font-size: 0.75rem;
  }
}
</style>
