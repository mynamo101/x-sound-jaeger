---
import BaseLayout from "@layouts/BaseLayout.astro";
import globalSettings from '@config/config.json.ts';
import { getPostsByAuthor, getAuthors, getImage } from "@utils/utils.js";
import PostCard from "@components/PostCard.astro";
import { type Page } from "astro";
import Pagination from "@components/Pagination.astro";
import ToggleCards from "@components/ToggleCards.astro";
import Social from "@components/Social.astro";
import { Image } from "astro:assets";
import authorSettings from '@config/authors.json.ts';

import "@styles/hero.css"
import "@styles/author.css"

export async function getStaticPaths({ paginate }) {
  const authors = await getAuthors();

  const paths = await Promise.all(
  authors.map(async ({ original, slug }) => {
      const { posts } = await getPostsByAuthor({ author: original });

      const paginatedPaths = paginate(posts, {
        params: { 
          author: slug
        },
        props: {
          title: original
        },
        pageSize: globalSettings.pagination_posts_number,
      });

      return paginatedPaths;
    })
  );

  return paths.flat();
}

const { page, title } = Astro.props as { page: Page, title: string };
const { author } = Astro.params as { author: string };

const t = await import(/* @vite-ignore */ `@locales/${globalSettings.language}.json`)
  .catch(() => import(/* @vite-ignore */ '@locales/en.json'));

const authorData = authorSettings.find((t) => t.slug === author);

const facebook_url = authorData?.facebook_url || null;
const x_url = authorData?.x_url || null;
const website_url = authorData?.website_url || null;
const bio = authorData?.bio || null;
const location = authorData?.location || null;

const first_name = title.split(' ')[0];

const image_glob = import.meta.glob<{ default: string }>('@assets/images/author/*.{jpg,jpeg,png,webp,gif,svg}', { eager: true });
const profile_image = getImage({glob: image_glob, folder_name: "author", image_name: author });
---

<BaseLayout globalSettings={globalSettings} t={t} title={title} description={bio} type="image" image={profile_image ? profile_image : globalSettings.site_meta_image_source}>
    <main>
        <section class="hero">
            <div class="wide-container">
                <div class="hero-wrapper">
                    <div class:list={['hero-top-border', { 'horizontal-line-animation': globalSettings.use_page_load_animations }]}></div>
                    <div class="hero-text-wrapper section-padding-bottom">               
                        <div class="hero-heading-wrapper section-padding-top">               
                            <h1 class:list={[{ 'letter-animation': globalSettings.use_page_load_animations }]}>{t.author_page.author_info}</h1>                  
                            <h3 class:list={['hero-number', { 'hero-number-animation': globalSettings.use_page_load_animations }]}></h3>
                        </div>
                    </div>         
        
                    <div class:list={['author-socials section-padding-bottom', { 'vertical-animation': globalSettings.use_page_load_animations }]} data-delay="200">
                        {facebook_url && 
                            <Social social={{
                                text: `${title} Facebook`,
                                url: facebook_url, 
                                icon: `
                                    <svg width="100%" height="100%" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M14 13.5H16.5L17.5 9.5H14V7.5C14 6.47 14 5.5 16 5.5H17.5V2.14C17.174 2.097 15.943 2 14.643 2C11.928 2 10 3.657 10 6.7V9.5H7V13.5H10V22H14V13.5Z" fill="currentColor"/>
                                    </svg>
                                `}}
                                classname={'author-social'}          
                            />
                        }

                        {x_url && 
                            <Social social={{
                                text: `${title} X`,
                                url: x_url, 
                                icon: `
                                    <svg width="100%" height="100%" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M17.6831 3H20.7366L14.0655 10.6246L21.9135 21H15.7677L10.9548 14.7074L5.44769 21H2.39231L9.52769 12.8446L2 3H8.3L12.6505 8.75169L17.6812 3H17.6831ZM16.6114 19.1723H18.3034L7.38154 4.73169H5.56585L16.6114 19.1723Z" fill="currentColor"/>
                                    </svg>
                                `}}
                                classname={'author-social'}          
                            />
                        }

                        {website_url && 
                            <Social social={{
                                text: `${title} website`,
                                url: website_url, 
                                icon: `
                                    <svg width="100%" height="100%" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="transform: rotateZ(-45deg);">
                                        <path d="M11 17H7C5.61667 17 4.43733 16.5123 3.462 15.537C2.48667 14.5617 1.99933 13.3827 2 12C2 10.6167 2.48767 9.43733 3.463 8.462C4.43833 7.48667 5.61733 6.99933 7 7H11V9H7C6.16667 9 5.45833 9.29167 4.875 9.875C4.29167 10.4583 4 11.1667 4 12C4 12.8333 4.29167 13.5417 4.875 14.125C5.45833 14.7083 6.16667 15 7 15H11V17ZM8 13V11H16V13H8ZM13 17V15H17C17.8333 15 18.5417 14.7083 19.125 14.125C19.7083 13.5417 20 12.8333 20 12C20 11.1667 19.7083 10.4583 19.125 9.875C18.5417 9.29167 17.8333 9 17 9H13V7H17C18.3833 7 19.5627 7.48767 20.538 8.463C21.5133 9.43833 22.0007 10.6173 22 12C22 13.3833 21.5123 14.5627 20.537 15.538C19.5617 16.5133 18.3827 17.0007 17 17H13Z" fill="currentColor"/>
                                    </svg>
                                `}} 
                                classname={'author-social'}          
                            />
                        }
                    </div>
        
                    <div class="author-bottom-line-left">
                        <div class:list={['hero-bottom-border', { 'horizontal-line-animation': globalSettings.use_page_load_animations }]}></div>
                    </div>
                    <div class="author-bottom-line-right">
                        <div class:list={['hero-bottom-border', { 'horizontal-line-animation': globalSettings.use_page_load_animations }]}></div>
                    </div>
                </div>
            </div>
        </section>

        <section class:list={['author-info wide-container', { 'hidden-animation': globalSettings.use_page_load_animations }]}>
            <div class="author-text-content">
                <div class="author-info-row author-info-count">
                    <div class="author-info-row-inner">
                        <h3>{t.author_page.full_name}</h3>
                        <div class="medium-text">{title}</div>
                    </div>
                </div>
        
                {bio &&
                    <div class="author-info-count">
                        <ToggleCards 
                            toggle_cards={[
                                {title: `${t.author_page.about} ${first_name}`, text: bio}
                            ]}
                        />
                    </div>
                }
        
                {location &&
                    <div class="author-info-row author-info-count">
                        <div class="author-info-row-inner">
                            <h3>{t.author_page.location}</h3>
                            <div class="medium-text">{location}</div>
                        </div>
                    </div>
                }
        
                <div class="author-info-row author-info-count">
                    <div class="author-info-row-inner">
                        <h3><span class="first-name-work">{first_name}</span>{t.author_page.work}</h3>
                        <div class="medium-text">
                            {page.total === 0 ? t.global.pagination.no_posts : page.total === 1 ? t.global.pagination.one_post : `${page.total} ${t.global.pagination.multiple_posts}`}
                        </div>
                    </div>
                </div>
            </div>
        
            {profile_image &&  
                <div class="author-image-wrapper section-padding-top">
                    <div class="card-image">      
                        <figure>
                            <Image 
                                src={profile_image as any}
                                alt={title}
                                loading="eager" 
                                format="webp"
                                widths={[300, 400, 600, 800, 1000, 1200, 1600]}
                                sizes="(max-width: 479px) calc(100vw - 36px), (max-width: 991px) calc(100vw - 60px), 40vw"
                            />
                        </figure> 
                    </div> 
                </div> 
            }
        </section>

        <section class:list={['wide-container section-padding-top grid-section', { 'hidden-animation': globalSettings.use_page_load_animations }]}>
            <div class="grid-outer section-padding author-posts">
                <div class="grid pagination-grid">
                    {
                        page.data.map((post) =>
                            <PostCard post={post}/>
                        )
                    } 
                </div>
                
                <Pagination t={t} posts_per_page={globalSettings.pagination_posts_number} total_posts={page.total} url={`/authors/${author}/`}/>
            </div>
        </section>
    </main>
</BaseLayout>

<script>
    document.querySelector('.hero-number').innerHTML = document.querySelectorAll('.author-info-count').length.toString();
</script>